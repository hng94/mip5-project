{"version":3,"sources":["components/Project/ProjectCard.tsx","components/SearchInput.tsx","components/HomePage.tsx","reducers/authReducer.tsx","hooks/useClickOutside.tsx","common/index.ts","contexts/AuthContext.tsx","components/common/Avatar.tsx","components/Nav.tsx","components/ProtectedRoute.tsx","components/common/ErrorHandler.tsx","components/Login.tsx","components/Project/ProjectList.tsx","components/Register.tsx","components/Profile.tsx","contexts/CategoryContext.tsx","components/common/Dropdown.tsx","components/common/QuillEditor.tsx","components/Project/CreateProjectForm.tsx","reducers/ProjectReducer.tsx","contexts/ProjectContext.tsx","components/Product/ProductCard.tsx","components/Project/ProjectInfo.tsx","components/Comment/CommentCard.tsx","components/Comment/CommentForm.tsx","components/Comment/Comments.tsx","components/Project/ProjectTimeline.tsx","components/Project/ProjectTabs.tsx","components/Project/ProjectDetail.tsx","components/Project/EditProjectForm.tsx","components/MyOrders.tsx","components/App.tsx","ErrorBoundary.tsx","index.tsx"],"names":["ProjectCard","project","to","id","className","src","url","alt","category","name","likeCount","commentCount","creator","firstName","lastName","title","subTitle","Date","createdDate","toLocaleDateString","style","width","currentFund","fundingGoal","SearchInput","value","setValue","useForm","register","handleSubmit","errors","onSubmit","data","console","log","searchQuery","type","placeholder","ref","AuthActionTypes","GET_PROJECTS","gql","HomePage","useState","currentPage","useQuery","variables","loading","refetch","fetchMore","setSearchQuery","useEffect","searchKey","skip","take","projects","length","map","index","useOnClickOutside","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","getLocalStorageValue","key","window","localStorage","getItem","JSON","parse","error","authReducer","state","action","LOGIN","payload","setItem","stringify","LOGOUT","removeItem","removeLocalStorageValue","initialAuth","email","token","AuthContext","createContext","dispatch","AuthProvider","children","auth","useReducer","decoded_jwt","jwtDecode","current_time","now","valueOf","exp","isValidToken","Provider","useAuth","React","DefaultAvatar","Nav","useRef","setOpen","isOpen","handleSignOut","height","Button","onClick","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","Item","active","ProtectedRoute","isPrivate","rest","renderCondition","render","location","ErrorHandler","graphQLErrors","i","message","Login","history","useHistory","watch","useLazyQuery","errorPolicy","onCompleted","push","sendLogin","loginResult","login","input","password","htmlFor","required","GET_MY_PROJECTS","REMOVE_PROJECT","RenderProjectItem","onRemove","ProjectList","myProjects","setMyProjects","creatorId","useMutation","removeProject","updatedMyProjects","filter","p","scope","REGISTER","Register","registerForm","postcode","address","phone","password2","validate","href","agree","GET_PROFILE","UPDATE_PROFILE","Profile","profile","updateProfile","loadingUpdate","updateError","defaultValue","readOnly","disabled","GET_CATEGORIES","CategoryContext","categories","setCategories","CategoryProvider","useCategory","useContext","Dropdown","items","dropdown","setDropdown","selectedItem","setSelected","toogleDropdown","aria-haspopup","aria-expanded","role","aria-orientation","aria-labelledby","item","handleOnClick","modules","toolbar","header","font","size","list","indent","clipboard","matchVisual","formats","QuillEditor","story","setStory","theme","onChange","ProjectActionTypes","CREATE_PROJECT","CreateProjectForm","selectedCategory","setCategory","createProject","projectImage","productImage","product","price","parseInt","body","products","categoryId","step","min","rows","ProjectReducer","ADD_TIMELINE","timelines","UPDATE_STORY","LOAD_PROJECT","ADD_COMMENT","comments","LIKE_COMMENT","newLike","forEach","comment","likes","LIKE_PROJECT","GET_PROJECT","ProjectContext","ProjectProvider","projectId","useParams","useLayoutEffect","useProject","CREATE_ORDER","ProductCard","createOrder","orders","productId","quantity","max","description","ProjectInfo","isLiked","like","indexOf","liked","setLiked","setLikeCount","likeProject","deletedDate","aria-disabled","CommentCard","setState","commentId","likeComment","sendLike","content","toDateString","CREATE_COMMENT","CommentForm","dispatchProject","reset","createComment","sendComment","sortByCreatedDate","a","b","Comments","sort","Timeline","createTimeline","addTimeline","timeline","dateTime","UPDATE_PROJECT","ProjectTabs","updateProject","openTab","setOpenTab","tab","e","preventDefault","data-toggle","dangerouslySetInnerHTML","__html","ProjectDetail","EditProjectForm","startDate","duration","GET_MY_ORDERS","REMOVE_ORDER","order","status","MyOrders","myOrders","setMyOrders","removeOrder","App","exact","path","ErrorBoundary","hasError","info","this","props","Component","typeDefs","authLink","setContext","_","headers","authorization","httpLink","createHttpLink","uri","client","ApolloClient","link","concat","cache","InMemoryCache","defaultOptions","watchQuery","fetchPolicy","query","mutate","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cde9a520.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { FiClock, FiHeart, FiThumbsUp, FiMessageCircle } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { ProjectDTO } from \"../../DTO/ProjectDTO\";\n\ninterface CardProps {\n  project: ProjectDTO;\n}\n\nexport default function ProjectCard({ project }: CardProps) {\n  return (\n    <>\n      <Link to={`/projects/detail/${project.id}`}>\n        <div className=\"max-h-full flex flex-col bg-white overflow-hidden border-gray-300 rounded cursor-pointer max-w-4xl transition duration-300 ease-in-out transform hover:shadow-lg\">\n          <div className=\"aspect-w-4 aspect-h-3\">\n            <img className=\"w-full\" src={project.url} alt={project.url} />\n          </div>\n          <div className=\"p-4\">\n            <div className=\"flex flex-row space-x-2 justify-between\">\n              <p className=\"uppercase text-red-400\">{project.category.name}</p>\n              <div className=\"space-x-4\">\n                <span>\n                  <span>{project.likeCount} </span>\n                  <FiThumbsUp className=\"h-6 inline-block text-red-500\" />\n                </span>\n                <span>\n                  <span>{project.commentCount} </span>\n                  <FiMessageCircle className=\"h-6 inline-block text-blue-500\" />\n                </span>\n              </div>\n            </div>\n            <p className=\"\">\n              {project.creator.firstName + \" \" + project.creator.lastName}\n            </p>\n            <hr />\n            <div className=\"h-40 pt-2\">\n              <p className=\"text-lg truncate\">{project.title}</p>\n              <div className=\"font-normal text-sm text-gray-700\" id=\"content\">\n                {project.subTitle}\n              </div>\n            </div>\n\n            <div className=\"pt-2\">\n              <hr />\n              <div className=\"text-md text-red-400 pt-2\">\n                <FiClock className=\"inline-flex mb-1 mr-1\" />\n                <span>\n                  {new Date(project.createdDate).toLocaleDateString()}\n                </span>\n              </div>\n              <div className=\"\">\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-green-200\">\n                  <div\n                    style={{\n                      width: `${\n                        (project.currentFund * 100) / project.fundingGoal\n                      }%`,\n                    }}\n                    className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-500\"\n                  ></div>\n                </div>\n              </div>\n              <div className=\"flex flex-row space-x-2\">\n                <span className=\"text-green-700\">\n                  {(project.currentFund * 100) / project.fundingGoal}\n                  <span className=\"text-xs\"> % funded</span>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </>\n  );\n}\n","import { Dispatch } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FiSearch } from \"react-icons/fi\";\n\ninterface SearchInputProps {\n  value: string;\n  setValue: Dispatch<string>;\n}\n\ninterface SearchFormProps {\n  searchQuery: string;\n}\nexport default function SearchInput({ value, setValue }: SearchInputProps) {\n  const { register, handleSubmit, errors } = useForm<SearchFormProps>();\n  const onSubmit = (data: SearchFormProps) => {\n    console.log(data);\n    setValue(data.searchQuery);\n  };\n  return (\n    <form\n      onSubmit={handleSubmit(onSubmit)}\n      className=\"border rounded border-gray-300 bg-white flex\"\n    >\n      <FiSearch type=\"submit\" className=\"absolute h-10 ml-4 text-gray-700\" />\n      <input\n        type=\"text\"\n        name=\"searchQuery\"\n        className=\"inline-flex rounded border-transparent form-input bg-transparent focus:outline-none w-full pl-10\"\n        placeholder=\"Search\"\n        ref={register()}\n      />\n    </form>\n  );\n}\n","import React, { FC, useState } from \"react\";\nimport { ProjectDTO } from \"../DTO/ProjectDTO\";\nimport ProjectCard from \"./Project/ProjectCard\";\nimport FilterBar from \"./FilterBar\";\nimport { useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport SearchInput from \"./SearchInput\";\ninterface IGetProjectsData {\n  projects: ProjectDTO[];\n}\n\ninterface IProjectInput {\n  searchKey?: string;\n  categoryId?: string;\n  take?: number;\n  skip?: number;\n}\n\nconst GET_PROJECTS = gql`\n  query GetProjects($searchKey: String, $take: Float, $skip: Float) {\n    projects(data: { searchKey: $searchKey, take: $take, skip: $skip }) {\n      id\n      title\n      url\n      subTitle\n      likeCount\n      commentCount\n      category {\n        name\n      }\n      creator {\n        email\n        firstName\n        lastName\n      }\n      fundingGoal\n      currentFund\n      createdDate\n    }\n  }\n`;\n\ninterface IndexPageProps {\n  projects: ProjectDTO[];\n}\nexport const HomePage = () => {\n  const [currentPage, setPage] = useState(0);\n  const { loading, data, refetch, fetchMore } = useQuery<\n    IGetProjectsData,\n    IProjectInput\n  >(GET_PROJECTS, {\n    variables: {},\n  });\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n\n  useEffect(() => {\n    console.log(data);\n    refetch({\n      searchKey: searchQuery,\n    });\n  }, [data, searchQuery]);\n\n  useEffect(() => {\n    fetchMore({\n      variables: {\n        skip: currentPage,\n        take: 1,\n      },\n    });\n  }, [currentPage]);\n\n  if (loading) return <p>Loading ...</p>;\n  if (data) {\n    return (\n      <div>\n        <div className=\"grid grid-cols-4 space-x-6\">\n          <div className=\"rounded-md flex flex-col space-y-2\">\n            <SearchInput value={searchQuery} setValue={setSearchQuery} />\n          </div>\n          <div className=\"col-span-3\">\n            {data.projects.length > 0 && (\n              <>\n                <div className=\"grid grid-col sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {data.projects.map((value, index) => (\n                    <ProjectCard project={value} key={index} />\n                  ))}\n                </div>\n              </>\n            )}\n            {data.projects.length == 0 && (\n              <div>\n                <pre className=\"mb-4 text-xl text-red-500\">\n                  There is not found any project\n                </pre>\n                <Link\n                  to=\"/projects/create\"\n                  className=\"focus:outline-none bg-blue-500 text-white uppercase py-2 px-6 shadow-lg rounded text-sm font-medium\"\n                >\n                  Create new project\n                </Link>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","import { removeLocalStorageValue, setLocalStorage } from \"../common\";\nimport { AuthDTO } from \"../DTO/AuthDTO\";\n\nexport enum AuthActionTypes {\n  LOGIN = \"LOGIN\",\n  LOGOUT = \"LOGOUT\",\n}\n\nexport type AuthAction = {\n  type: AuthActionTypes;\n  payload: AuthDTO;\n};\n\nexport function authReducer(state: AuthDTO, action: AuthAction): AuthDTO {\n  switch (action.type) {\n    case AuthActionTypes.LOGIN: {\n      setLocalStorage(\"auth\", action.payload);\n      return action.payload;\n    }\n    case AuthActionTypes.LOGOUT: {\n      removeLocalStorageValue(\"auth\");\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from \"react\";\n\nexport default function useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n","export function getLocalStorageValue(key: string) {\n  const value = window && localStorage.getItem(key);\n  if (!value) return null;\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return null;\n  }\n}\n\nexport function setLocalStorage(key: string, value: any) {\n  window && localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function removeLocalStorageValue(key: string) {\n  window && localStorage.removeItem(key);\n}\n","import * as React from \"react\";\nimport { AuthDTO } from \"../DTO/AuthDTO\";\nimport { createContext, FC, useEffect, useReducer } from \"react\";\nimport {\n  AuthAction,\n  AuthActionTypes,\n  authReducer,\n} from \"../reducers/authReducer\";\nimport jwtDecode from \"jwt-decode\";\nimport { getLocalStorageValue } from \"../common\";\n\ninterface AuthContextProps {\n  state: AuthDTO;\n  dispatch: React.Dispatch<AuthAction>;\n}\n\ninterface JWTPayload {\n  id: string;\n  email: string;\n  exp: number;\n}\n\nconst isValidToken = (token: string): boolean => {\n  try {\n    const decoded_jwt: JWTPayload = jwtDecode(token);\n    const current_time = Date.now().valueOf() / 1000;\n    return decoded_jwt.exp > current_time;\n  } catch (error) {\n    return false;\n  }\n};\nexport const initialAuth = {\n  id: null,\n  email: null,\n  token: null,\n};\nexport const AuthContext = createContext<AuthContextProps>({\n  state: initialAuth,\n  dispatch: () => {},\n});\n\nexport const AuthProvider: FC = ({ children }) => {\n  const auth = getLocalStorageValue(\"auth\");\n  const [state, dispatch] = useReducer(authReducer, initialAuth);\n\n  useEffect(() => {\n    if (!auth?.token) return;\n    if (isValidToken(auth.token)) {\n      dispatch({\n        type: AuthActionTypes.LOGIN,\n        payload: auth,\n      });\n    } else {\n      dispatch({\n        type: AuthActionTypes.LOGOUT,\n        payload: initialAuth,\n      });\n    }\n  }, []);\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default function useAuth() {\n  return React.useContext(AuthContext);\n}\n","export default function DefaultAvatar() {\n  return <img src=\"../../avatar.png\" className=\"h-10 rounded-full\" />;\n}\n","import * as React from \"react\";\nimport { FiHeart } from \"react-icons/fi\";\nimport { useRef, useState } from \"react\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport useOnClickOutside from \"../hooks/useClickOutside\";\nimport useAuth, { AuthProvider, initialAuth } from \"../contexts/AuthContext\";\nimport { AuthActionTypes } from \"../reducers/authReducer\";\nimport { Link } from \"react-router-dom\";\nimport DefaultAvatar from \"./common/Avatar\";\n\nexport default function Nav() {\n  const { state: auth, dispatch } = useAuth();\n  const ref = useRef();\n  useOnClickOutside(ref, () => setOpen(false));\n  const [isOpen, setOpen] = useState(false);\n  const handleSignOut = () => {\n    setOpen(false);\n    dispatch({\n      type: AuthActionTypes.LOGOUT,\n      payload: initialAuth,\n    });\n  };\n\n  return (\n    <AuthProvider>\n      <nav\n        style={{ height: \"58px\" }}\n        className=\"m-4 py-2 px-6 bg-white rounded-md shadow-lg flex items-center justify-between border border-white\"\n      >\n        <div className=\"space-x-2\">\n          <Link to=\"/\">\n            <p className=\"rounded-md py-2 font-medium text-red-400 uppercase\">\n              <FiHeart className=\"inline-flex h-5 w-5 mr-2\" />\n              give\n            </p>\n          </Link>\n        </div>\n        {!auth?.token ? (\n          <div>\n            <Link to=\"/register\">\n              <span className=\"rounded-md py-2 px-4 font-medium text-gray-500 hover:text-red-400\">\n                Register\n              </span>\n            </Link>\n            <Link to=\"/login\">\n              <span className=\"rounded-md py-2 px-4 font-medium text-gray-500 hover:text-red-400\">\n                Login\n              </span>\n            </Link>\n          </div>\n        ) : (\n          <div className=\"relative h-10\">\n            <Menu>\n              <div ref={ref}>\n                <Menu.Button className=\"inline-flex focus:outline-none\">\n                  <div className=\"h-10\" onClick={() => setOpen(!isOpen)}>\n                    <DefaultAvatar />\n                  </div>\n                </Menu.Button>\n                <Transition\n                  show={isOpen}\n                  enter=\"transition ease-out duration-100\"\n                  enterFrom=\"transform-gpu  opacity-0 scale-95\"\n                  enterTo=\"transform-gpu  opacity-100 scale-100\"\n                  leave=\"transition ease-in duration-75\"\n                  leaveFrom=\"trantransform-gpu sform opacity-100 scale-100\"\n                  leaveTo=\"transform-gpu  opacity-0 scale-95\"\n                >\n                  <Menu.Items\n                    static\n                    className=\"absolute z-50 right-0 w-56 mt-2 origin-top-right bg-white border border-gray-200 divide-y divide-gray-100 rounded-md shadow-lg outline-none\"\n                  >\n                    <div className=\"px-4 py-3\">\n                      <p className=\"text-sm leading-5\">Signed in as</p>\n                      <p className=\"text-sm font-medium leading-5 text-gray-900 truncate\">\n                        {auth?.email}\n                      </p>\n                    </div>\n\n                    <div className=\"py-1\">\n                      <Menu.Item>\n                        <Link to=\"/profile\">\n                          <p\n                            onClick={() => setOpen(!isOpen)}\n                            className=\"hover:bg-gray-100 hover:text-red-400 text-gray-700 flex justify-between w-full px-4 py-2 text-sm leading-5 text-left focus:outline-none\"\n                          >\n                            Profile\n                          </p>\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Link to=\"/orders\">\n                          <p\n                            onClick={() => setOpen(!isOpen)}\n                            className=\"hover:bg-gray-100 hover:text-red-400 text-gray-700 flex justify-between w-full px-4 py-2 text-sm leading-5 text-left focus:outline-none\"\n                          >\n                            My orders\n                          </p>\n                        </Link>\n                      </Menu.Item>\n                      <Menu.Item>\n                        <Link to=\"/projects\">\n                          <p\n                            onClick={() => setOpen(!isOpen)}\n                            className=\"hover:bg-gray-100 hover:text-red-400 text-gray-700 flex justify-between w-full px-4 py-2 text-sm leading-5 text-left focus:outline-none\"\n                          >\n                            Created projects\n                          </p>\n                        </Link>\n                      </Menu.Item>\n                    </div>\n\n                    <div className=\"py-1\">\n                      <Menu.Item>\n                        {({ active }) => (\n                          <p\n                            className={`${\n                              active\n                                ? \"bg-gray-100 text-gray-900\"\n                                : \"text-gray-700\"\n                            } flex justify-between w-full px-4 py-2 text-sm leading-5 text-left`}\n                            onClick={handleSignOut}\n                          >\n                            Sign out\n                          </p>\n                        )}\n                      </Menu.Item>\n                    </div>\n                  </Menu.Items>\n                </Transition>\n              </div>\n            </Menu>\n          </div>\n        )}\n      </nav>\n    </AuthProvider>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { getLocalStorageValue } from \"../common\";\nimport useAuth from \"../contexts/AuthContext\";\n\nexport default function ProtectedRoute({ isPrivate, children, ...rest }) {\n  // let { state: auth, dispatch } = useAuth();\n  const auth = getLocalStorageValue(\"auth\");\n  const renderCondition = !!auth?.token == isPrivate;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        renderCondition ? children : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import { ApolloError } from \"@apollo/client\";\n\ninterface ErrorProp {\n  error?: ApolloError;\n}\nconst ErrorHandler = ({ error }: ErrorProp) => {\n  if (!error) return null;\n  return (\n    <div>\n      {error && (\n        <pre className=\"text-xs text-red-500\">\n          {error.graphQLErrors.map(({ message }, i) => (\n            <span key={i}>{message}</span>\n          ))}\n        </pre>\n      )}\n    </div>\n  );\n};\n\nexport default ErrorHandler;\n","import React, { useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useAuth, { AuthContext } from \"../contexts/AuthContext\";\nimport { AuthDTO, AuthInput } from \"../DTO/AuthDTO\";\nimport { gql, useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport ErrorHandler from \"./common/ErrorHandler\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { AuthActionTypes } from \"../reducers/authReducer\";\n\ninterface ILoginData {\n  login: AuthDTO;\n}\n\nconst LOGIN = gql`\n  query LoginQuery($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      id\n      email\n      token\n    }\n  }\n`;\nconst Login: React.FC = () => {\n  let history = useHistory();\n  const { state: auth, dispatch } = useAuth();\n  const { register, handleSubmit, watch, errors } = useForm<AuthInput>();\n  const [\n    sendLogin,\n    { loading, error, data: loginResult },\n  ] = useLazyQuery<ILoginData>(LOGIN, {\n    errorPolicy: \"all\",\n    onCompleted: (data) => {\n      history.push(\"/\");\n    },\n  });\n\n  const onSubmit = (input: AuthInput) => {\n    sendLogin({\n      variables: {\n        email: input.email,\n        password: input.password,\n      },\n    });\n  };\n\n  useEffect(() => {\n    console.log(loginResult);\n    if (loginResult) {\n      dispatch({\n        type: AuthActionTypes.LOGIN,\n        payload: loginResult.login,\n      });\n    }\n  }, [loginResult]);\n\n  return (\n    <>\n      {loading && <div>Sending query</div>}\n      <div className=\"rounded shadow p-4 bg-white w-full lg:w-5/12 mx-auto\">\n        <ErrorHandler error={error} />\n        <p className=\"text-3xl mb-6\">Login</p>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"email\"\n            >\n              E-mail\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                ref={register({ required: \"Email is required\" })}\n              />\n            </label>\n            <p className=\"text-sm text-red-500\">\n              {errors.email && errors.email.message}\n            </p>\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"password\"\n            >\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                ref={register({ required: \"Password is required\" })}\n              />\n            </label>\n            <p className=\"text-sm text-red-500\">\n              {errors.password && errors.password.message}\n            </p>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full py-3 rounded text-white\n                    font-medium bg-red-400 uppercase\n                    focus:outline-none hover:bg-red-500 hover:shadow-lg\"\n          >\n            Login\n          </button>\n        </form>\n        <div className=\"sm:flex sm:flex-wrap mt-8 sm:mb-4 text-sm text-center\">\n          <Link to=\"/register\">\n            <span className=\"flex-2 underline\">Create an Account</span>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import { gql, useMutation, useQuery } from \"@apollo/client\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport { ProjectDTO } from \"../../DTO/ProjectDTO\";\n\nconst GET_MY_PROJECTS = gql`\n  query projects($creatorId: String!) {\n    projects(data: { creatorId: $creatorId }) {\n      id\n      title\n      createdDate\n      category {\n        name\n      }\n      fundingGoal\n    }\n  }\n`;\n\nconst REMOVE_PROJECT = gql`\n  mutation removeProject($id: String!) {\n    removeProject(id: $id)\n  }\n`;\n\ninterface RenderProjectItemProps {\n  project: ProjectDTO;\n  onRemove: () => void;\n}\n\nconst RenderProjectItem = ({ project, onRemove }: RenderProjectItemProps) => {\n  return (\n    <tr key={project.id}>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <Link\n          className=\"text-sm font-medium text-blue-500 hover:underline\"\n          to={`/projects/detail/${project.id}`}\n        >\n          {project.title}\n        </Link>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <p className=\"text-sm text-gray-900\">{project.category.name}</p>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <span className=\"uppercase px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n          {project.fundingGoal}\n        </span>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        {new Date(project.createdDate).toLocaleDateString()}\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n        <Link\n          to={`/projects/detail/${project.id}`}\n          className=\"text-gray-500 p-2\"\n        >\n          Detail\n        </Link>\n        <Link to={`/projects/edit/${project.id}`} className=\"text-blue-500 p-2\">\n          Edit\n        </Link>\n        <button onClick={onRemove} className=\"text-red-500 p-2\">\n          Remove\n        </button>\n      </td>\n    </tr>\n  );\n};\n\ninterface IGetProjects {\n  projects: ProjectDTO[];\n}\nexport default function ProjectList() {\n  const { state, dispatch } = useAuth();\n  const [myProjects, setMyProjects] = useState<ProjectDTO[]>(null);\n  const { loading, data } = useQuery<IGetProjects>(GET_MY_PROJECTS, {\n    variables: {\n      creatorId: state.id,\n    },\n  });\n  const [removeProject, { data: removedId, error: removeError }] = useMutation(\n    REMOVE_PROJECT,\n    {\n      onCompleted: ({ removeProject }) => {\n        const updatedMyProjects = myProjects.filter(\n          (p) => p.id !== removeProject\n        );\n        setMyProjects([...updatedMyProjects]);\n      },\n    }\n  );\n  useEffect(() => {\n    if (data && data.projects) {\n      setMyProjects([...data.projects]);\n    }\n  }, [data]);\n  if (loading) <pre className=\"text-red-500\">Loading</pre>;\n  if (myProjects)\n    return (\n      <>\n        <div className=\"py-4 flex flex-row justify-between\">\n          <p className=\"text-3xl uppercase\">My projects</p>\n          <Link to=\"/projects/create\">\n            <button className=\"focus:outline-none bg-blue-500 text-white uppercase py-2 px-6 shadow-lg rounded text-sm font-medium\">\n              New\n            </button>\n          </Link>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"overflow-hidden border border-gray-200 sm:rounded-lg shadow-sm\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Title\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Category\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Funding goal\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Created data\n                      </th>\n                      <th scope=\"col\" className=\"relative px-6 py-3\">\n                        <span className=\"sr-only\">Edit</span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {myProjects.map((project) => (\n                      <RenderProjectItem\n                        key={project.id}\n                        project={project}\n                        onRemove={() => {\n                          removeProject({\n                            variables: {\n                              id: project.id,\n                            },\n                          });\n                        }}\n                      />\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n\n  return null;\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport ErrorHandler from \"./common/ErrorHandler\";\nimport useAuth from \"../contexts/AuthContext\";\nimport { AuthActionTypes } from \"../reducers/authReducer\";\nimport { AuthDTO } from \"../DTO/AuthDTO\";\n\ninterface IRegisterForm {\n  firstName: string;\n  lastName: string;\n  address: string;\n  postcode: string;\n  phone: string;\n  email: string;\n  password: string;\n  password2?: string;\n  agree?: boolean;\n}\n\ninterface ICreateUser {\n  firstName: string;\n  lastName: string;\n  address: string;\n  postcode: string;\n  phone: string;\n  email: string;\n  password: string;\n}\n\nconst REGISTER = gql`\n  mutation RegisterUser($data: CreateUserInput!) {\n    register(data: $data) {\n      email\n      token\n    }\n  }\n`;\nconst Register = () => {\n  const { state: auth, dispatch } = useAuth();\n\n  const {\n    register: registerForm,\n    handleSubmit,\n    watch,\n    errors,\n  } = useForm<IRegisterForm>();\n  const [register, { loading, error, data }] = useMutation<{\n    register: AuthDTO;\n    data: ICreateUser;\n  }>(REGISTER);\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const onSubmit = ({\n    firstName,\n    lastName,\n    email,\n    postcode,\n    address,\n    phone,\n    password,\n  }: IRegisterForm) => {\n    register({\n      variables: {\n        data: {\n          firstName,\n          lastName,\n          email,\n          postcode,\n          address,\n          phone,\n          password,\n        },\n      },\n    });\n  };\n\n  useEffect(() => {\n    console.log(data);\n    if (data?.register) {\n      dispatch({\n        type: AuthActionTypes.LOGIN,\n        payload: data.register,\n      });\n    }\n  }, [data]);\n  return (\n    <>\n      <div className=\"rounded shadow p-4 bg-white w-full lg:w-5/12 mx-auto\">\n        <ErrorHandler error={error} />\n        <p className=\"text-3xl mb-6\">Register</p>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase block\"\n              htmlFor=\"firstName\"\n            >\n              First name\n              <span className=\"text-red-500\">\n                {errors.firstName && errors.firstName.message}\n              </span>\n              <input\n                className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                type=\"text\"\n                name=\"firstName\"\n                ref={registerForm({ required: \" is required\" })}\n              />\n            </label>\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"lastName\"\n            >\n              Last name\n              <span className=\"text-red-500\">\n                {errors.lastName && errors.lastName.message}\n              </span>\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                ref={registerForm({ required: \" is required\" })}\n              />\n            </label>\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"email\"\n            >\n              E-mail\n              <span className=\"text-red-500\">\n                {errors.email && errors.email.message}\n              </span>\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                ref={registerForm({ required: \" is required\" })}\n              />\n            </label>\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"password\"\n            >\n              Password\n              <span className=\"text-red-500\">\n                {errors.password && errors.password.message}\n              </span>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-input mt-1 block w-full rounded border-gray-300\"\n              ref={registerForm({ required: \" is required\" })}\n            />\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"password2\"\n            >\n              Re-type password\n              <span className=\"text-red-500\">\n                {errors.password2 && errors.password2.message}\n              </span>\n            </label>\n            <input\n              type=\"password\"\n              name=\"password2\"\n              className=\"form-input mt-1 block w-full rounded border-gray-300\"\n              ref={registerForm({\n                required: \" is required\",\n                validate: (value) => {\n                  if (value != password.current) {\n                    return \" does not match\";\n                  } else return true;\n                },\n              })}\n            />\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"address\"\n            >\n              Address\n            </label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              className=\"form-input mt-1 block w-full rounded border-gray-300\"\n              ref={registerForm}\n            />\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"postcode\"\n            >\n              Postcode\n            </label>\n            <input\n              type=\"text\"\n              name=\"postcode\"\n              className=\"form-input mt-1 block w-full rounded border-gray-300\"\n              ref={registerForm}\n            />\n          </div>\n          <div>\n            <label\n              className=\"text-xs font-semibold text-gray-600 uppercase\"\n              htmlFor=\"phone\"\n            >\n              Telephone\n            </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              className=\"form-input mt-1 block w-full rounded border-gray-300\"\n              ref={registerForm}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"agree\">\n              <input\n                name=\"agree\"\n                type=\"checkbox\"\n                className=\"h-5 w-5 text-blue-500 rounded focus:outline-none border-gray-300\"\n                ref={registerForm({ required: true })}\n              />\n              <span className=\"ml-2\">\n                I agree with\n                <a href=\"/policy\">\n                  <a className=\"ml-1 text-gray-700 underline\">GIVE's policy.</a>\n                </a>\n              </span>\n            </label>\n            <p className=\"text-sm text-red-500\">\n              {errors.agree && \"Agree with our policy to register acccount!\"}\n            </p>\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"w-full py-3 rounded text-white font-medium bg-red-400 uppercase focus:outline-none hover:bg-red-500 hover:shadow-lg\"\n          >\n            Register\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","import { gql, useMutation, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useAuth from \"../contexts/AuthContext\";\nimport { UserDTO } from \"../DTO/UserDTO\";\nimport DefaultAvatar from \"./common/Avatar\";\nimport ErrorHandler from \"./common/ErrorHandler\";\n\nconst GET_PROFILE = gql`\n  query GetProfile($email: String!) {\n    profile(email: $email) {\n      firstName\n      lastName\n      email\n      postcode\n      address\n      phone\n    }\n  }\n`;\n\nconst UPDATE_PROFILE = gql`\n  mutation UpdateProfile(\n    $firstName: String!\n    $lastName: String!\n    $postcode: String!\n    $address: String!\n    $phone: String!\n  ) {\n    updateProfile(\n      data: {\n        firstName: $firstName\n        lastName: $lastName\n        postcode: $postcode\n        address: $address\n        phone: $phone\n      }\n    ) {\n      firstName\n      lastName\n      email\n      postcode\n      address\n      phone\n    }\n  }\n`;\ninterface IGetProfileData {\n  profile: UserDTO;\n}\n\ninterface GetProfileInput {\n  email: string;\n}\nexport default function Profile() {\n  const { state: auth, dispatch } = useAuth();\n  const { loading, data: profile, error } = useQuery<\n    IGetProfileData,\n    GetProfileInput\n  >(GET_PROFILE, {\n    variables: {\n      email: auth.email,\n    },\n  });\n  const [\n    updateProfile,\n    { loading: loadingUpdate, data: updatedProfile, error: updateError },\n  ] = useMutation<IGetProfileData>(UPDATE_PROFILE);\n\n  const { register, handleSubmit, watch, errors } = useForm<UserDTO>();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const onSubmit = ({ firstName, lastName, address, postcode, phone }) => {\n    updateProfile({\n      variables: {\n        firstName,\n        lastName,\n        address,\n        postcode,\n        phone,\n      },\n    });\n  };\n  if (loading) return <pre>Loading</pre>;\n  return (\n    <>\n      <ErrorHandler error={error} />\n      <ErrorHandler error={updateError} />\n      <div className=\"max-w-screen-md mx-auto rounded shadow border-gray-300 bg-white p-6 mt-4\">\n        <p className=\"text-3xl mb-6\">Profile page</p>\n        {/* Avatar */}\n        <div className=\"flex flex-row space-x-2\">\n          <DefaultAvatar />\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"mt-6\">\n          <div className=\"grid grid-cols-1 gap-6 \">\n            <div>\n              <div>\n                <label\n                  className=\"text-xs font-semibold text-gray-600 uppercase\"\n                  htmlFor=\"firstName\"\n                >\n                  <span>First name</span>\n                  <span className=\"text-red-500 ml-1\">\n                    {errors.firstName && \"is required\"}\n                  </span>\n                  <input\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    ref={register({ required: true })}\n                    defaultValue={profile?.profile.firstName}\n                  />\n                </label>\n              </div>\n              <div>\n                <label\n                  className=\"text-xs font-semibold text-gray-600 uppercase\"\n                  htmlFor=\"lastName\"\n                >\n                  Last name\n                  <span className=\"text-red-500 ml-1\">\n                    {errors.lastName && \"is required\"}\n                  </span>\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    ref={register({ required: true })}\n                    defaultValue={profile?.profile.lastName}\n                  />\n                </label>\n              </div>\n              <div>\n                <label\n                  className=\"text-xs font-semibold text-gray-600 uppercase\"\n                  htmlFor=\"email\"\n                >\n                  E-mail\n                  <span className=\"text-red-500 ml-1\">\n                    {errors.email && \"is required\"}\n                  </span>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    readOnly\n                    disabled\n                    className=\"disabled:opacity-50 form-input mt-1 block w-full rounded border-gray-300\"\n                    ref={register({ required: true })}\n                    defaultValue={profile?.profile.email}\n                  />\n                </label>\n              </div>\n            </div>\n            <div>\n              <div>\n                <label\n                  className=\"text-xs font-semibold text-gray-600 uppercase\"\n                  htmlFor=\"address\"\n                >\n                  Address\n                  <span className=\"text-red-500 ml-1\">\n                    {errors.address && \"is required\"}\n                  </span>\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    ref={register({ required: true })}\n                    defaultValue={profile?.profile.address}\n                  />\n                </label>\n              </div>\n              <div>\n                <label\n                  className=\"text-xs font-semibold text-gray-600 uppercase\"\n                  htmlFor=\"postcode\"\n                >\n                  Postcode\n                  <span className=\"text-red-500 ml-1\">\n                    {errors.postcode && \"is required\"}\n                  </span>\n                  <input\n                    type=\"text\"\n                    name=\"postcode\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    ref={register({ required: true })}\n                    defaultValue={profile?.profile.postcode}\n                  />\n                </label>\n              </div>\n              <div>\n                <label\n                  className=\"text-xs font-semibold text-gray-600 uppercase\"\n                  htmlFor=\"phone\"\n                >\n                  Phone\n                  <span className=\"text-red-500 ml-1\">\n                    {errors.phone && \"is required\"}\n                  </span>\n                  <input\n                    type=\"text\"\n                    name=\"phone\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    ref={register({ required: true })}\n                    defaultValue={profile?.profile.phone}\n                  />\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <button\n            disabled={loadingUpdate}\n            type=\"submit\"\n            className=\"mt-6 mr-4 px-3 py-2 rounded text-white font-medium bg-red-400 uppercase focus:outline-none hover:bg-red-500 hover:shadow-lg\"\n          >\n            Save change\n          </button>\n          {/* <a href=\"/change-password\">\n            <a className=\"text-sm cursor-pointer bg-white rounded-md font-medium text-gray-500 hover:text-red-400\">\n              Change password\n            </a>\n          </a> */}\n        </form>\n      </div>\n    </>\n  );\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport {\n  createContext,\n  Dispatch,\n  FC,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { CategoryDTO } from \"../DTO/CategoryDTO\";\n\ninterface ICategoryContext {\n  categories: CategoryDTO[];\n  setCategories: Dispatch<CategoryDTO[]>;\n}\n\ninterface ICategoriesData {\n  categories: CategoryDTO[];\n}\n\nconst GET_CATEGORIES = gql`\n  query GetCategories {\n    categories {\n      id\n      name\n    }\n  }\n`;\nexport const CategoryContext = createContext<ICategoryContext>({\n  categories: [],\n  setCategories: () => {},\n});\n\nexport const CategoryProvider: FC = ({ children }) => {\n  const [categories, setCategories] = useState<CategoryDTO[]>();\n  const { loading, error, data } = useQuery<ICategoriesData>(GET_CATEGORIES);\n  useEffect(() => {\n    if (data) {\n      setCategories(data.categories);\n    }\n  }, [data]);\n  return (\n    <CategoryContext.Provider value={{ categories, setCategories }}>\n      {children}\n    </CategoryContext.Provider>\n  );\n};\n\nexport default function useCategory() {\n  return useContext(CategoryContext);\n}\n","import React, { Dispatch, useEffect, useRef, useState } from \"react\";\nimport useOnClickOutside from \"../../hooks/useClickOutside\";\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\n\ntype IDropdown = {\n  id: string;\n  name: string;\n};\n\ninterface DropdownProps {\n  items: IDropdown[];\n  setValue: Dispatch<any>;\n  defaultValue?: any | null;\n}\n\nexport default function Dropdown({\n  items,\n  setValue,\n  defaultValue,\n}: DropdownProps) {\n  // state showing if dropdown is open or closed\n  const [dropdown, setDropdown] = useState(false);\n  // managing dropdown items (list of dropdown items)\n\n  const ref = useRef();\n  // contains multiselect items\n  const [selectedItem, setSelected] = useState(defaultValue);\n\n  useEffect(() => {\n    if (items && !defaultValue) {\n      setSelected(items[0]);\n    }\n  }, [items]);\n  const handleOnClick = (item: IDropdown) => {\n    setSelected(item);\n    setValue(item);\n    toogleDropdown();\n  };\n  // toggle dropdown open/close\n  const toogleDropdown = () => {\n    setDropdown(!dropdown);\n  };\n\n  useOnClickOutside(ref, () => setDropdown(false));\n  if (items && selectedItem)\n    return (\n      <>\n        <div className=\"relative inline-block text-left w-full\">\n          <div>\n            <button\n              type=\"button\"\n              className=\"inline-flex w-full justify-between rounded border bg-white text-gray-700 border-gray-300 px-4 py-2 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500\"\n              id=\"options-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"true\"\n              onClick={toogleDropdown}\n            >\n              {selectedItem.name}\n              {dropdown ? (\n                <FiChevronUp className=\"h-6\" />\n              ) : (\n                <FiChevronDown className=\"h-6\" />\n              )}\n            </button>\n          </div>\n          <div\n            id=\"dropdown\"\n            ref={ref}\n            className={`z-50 origin-top-right absolute right-0 mt-2 w-full rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\n          transition ease-${dropdown ? \"out\" : \"in\"} \n          duration-${dropdown ? \"100\" : \"75\"} \n          transform opacity-${dropdown ? \"100\" : \"0\"}\n          scale-${dropdown ? \"100\" : \"95\"}`}\n          >\n            <div\n              className={`py-1 z-auto ${dropdown ? \"block\" : \"hidden\"}`}\n              role=\"menu\"\n              aria-orientation=\"vertical\"\n              aria-labelledby=\"options-menu\"\n            >\n              {items.map((item, index) => {\n                return (\n                  <a\n                    key={index}\n                    href=\"#\"\n                    onClick={() => handleOnClick(item)}\n                    className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n                    role=\"menuitem\"\n                  >\n                    {item.name}\n                  </a>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n\n  return null;\n}\n","import React, { useState } from \"react\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill from \"react-quill\";\n\nconst modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nconst formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\nexport default function QuillEditor({ story, setStory, ...rest }) {\n  // const [value, setValue] = useState(\"\");\n  const handleChange = (newValue) => {\n    setStory(newValue);\n  };\n  return (\n    <ReactQuill\n      {...rest}\n      id=\"quill-editor\"\n      modules={modules}\n      formats={formats}\n      theme=\"snow\"\n      value={story}\n      placeholder=\"Write your story here\"\n      onChange={(value) => handleChange(value)}\n    />\n  );\n\n  //   return <ReactQuill theme=\"snow\" value={value} onChange={setValue} />;\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport useCategory from \"../../contexts/CategoryContext\";\nimport { CategoryDTO } from \"../../DTO/CategoryDTO\";\nimport { CreateProductInput, ProductDTO } from \"../../DTO/ProductDTO\";\nimport Dropdown from \"../common/Dropdown\";\nimport QuillEditor from \"../common/QuillEditor\";\nimport ProductCard from \"../Product/ProductCard\";\n\nconst CREATE_PROJECT = gql`\n  mutation CreateProject($data: CreateProjectInput!) {\n    createProject(data: $data) {\n      id\n    }\n  }\n`;\n\nexport default function CreateProjectForm() {\n  let history = useHistory();\n  const [story, setStory] = useState(\"\");\n  const { categories } = useCategory();\n  const [selectedCategory, setCategory] = useState<CategoryDTO>();\n  useEffect(() => {\n    if (categories) setCategory(categories[0]);\n  }, [categories]);\n  const [createProject, { loading, error, data }] = useMutation(\n    CREATE_PROJECT,\n    {\n      onCompleted: ({ createProject }) => {\n        history.push(`/projects/detail/${createProject.id}`);\n      },\n    }\n  );\n  const addProject = ({\n    title,\n    subTitle,\n    url,\n    // startDate,\n    // duration,\n    product,\n    fundingGoal,\n  }) => {\n    product.price = parseInt(product.price);\n    fundingGoal = parseInt(fundingGoal);\n    // duration = parseInt(duration);\n    const body = {\n      title,\n      subTitle,\n      url,\n      // startDate,\n      // duration,\n      products: [product],\n      fundingGoal,\n      story: story,\n      categoryId: selectedCategory.id,\n    };\n    createProject({\n      variables: {\n        data: body,\n      },\n    });\n  };\n\n  const { register, errors, handleSubmit, watch } = useForm();\n  const projectImage = watch(\"url\");\n  const productImage = watch(\"product.url\");\n  return (\n    <>\n      <div className=\"max-w-screen-sm mx-auto mb-10\">\n        <form onSubmit={handleSubmit(addProject)}>\n          <div className=\"shadow sm:rounded-md\">\n            <div className=\"px-4 rounded-t-md py-5 bg-white space-y-6 sm:p-6\">\n              <p className=\"text-2xl text-red-400 pb-2 border-b-2 border-red-400\">\n                Project info\n              </p>\n              <div className=\"grid grid-cols-1 gap-6\">\n                <div>\n                  <label\n                    htmlFor=\"title\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Title\n                    <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    ref={register({ required: true })}\n                    placeholder=\"Title\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Subtitle\n                  </label>\n                  <div className=\"form-input mt-1\">\n                    <input\n                      name=\"subTitle\"\n                      ref={register({ required: true })}\n                      type=\"text\"\n                      placeholder=\"Subtitle\"\n                      className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Category\n                  </label>\n                  <Dropdown items={categories} setValue={setCategory} />\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Cover photo\n                </label>\n                <img className=\"max-h-20\" src={projectImage} alt=\"\" />\n                <div className=\"form-input mt-1\">\n                  <input\n                    name=\"url\"\n                    ref={register({ required: true })}\n                    type=\"text\"\n                    placeholder=\"Cover photo URL\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                  />\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Funding goal (eur)\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    name=\"fundingGoal\"\n                    ref={register({ required: true })}\n                    type=\"number\"\n                    placeholder=\"0\"\n                    step={100}\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                  />\n                </div>\n              </div>\n              <div>\n                <p className=\"text-2xl text-red-400 mb-2 pb-2 border-b-2 border-red-400\">\n                  Story\n                </p>\n                <QuillEditor story={story} setStory={setStory} />\n              </div>\n              <p className=\"text-2xl text-red-400 pb-2 border-b-2 border-red-400\">\n                Product\n              </p>\n              <div key=\"productForm\" className=\"grid grid-cols-1 gap-6\">\n                <div>\n                  <label\n                    htmlFor=\"title\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Title\n                    <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    name=\"product.title\"\n                    type=\"text\"\n                    ref={register({ required: true })}\n                    placeholder=\"Product title\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Price (eur)\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"number\"\n                      placeholder=\"price\"\n                      name=\"product.price\"\n                      ref={register({ required: true })}\n                      className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                      step={10}\n                      min={0}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Description\n                  </label>\n                  <textarea\n                    rows={4}\n                    name=\"product.description\"\n                    ref={register({ required: true })}\n                    className=\"resize-none form-input mt-1 block w-full rounded border-gray-300\"\n                    placeholder=\"Product description\"\n                  ></textarea>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Product photo\n                  </label>\n                  <img className=\"max-h-20\" src={productImage} alt=\"\" />\n                  <input\n                    type=\"text\"\n                    name=\"product.url\"\n                    ref={register({ required: true })}\n                    placeholder=\"Product photo URL\"\n                    className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"px-4 rounded-b-md py-3 bg-gray-50 text-right sm:px-6\">\n              <button\n                className=\"focus:outline-none bg-blue-500 text-white uppercase py-2 px-6 shadow-lg rounded text-sm font-medium\"\n                type=\"submit\"\n              >\n                Save & Lauch\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import { CommentDTO } from \"../DTO/CommentDTO\";\nimport { LikeDTO } from \"../DTO/LikeDTO\";\nimport { OrderDTO } from \"../DTO/OrderDTO\";\nimport { ProjectDTO } from \"../DTO/ProjectDTO\";\nimport { TimelineDTO } from \"../DTO/TimelineDTO\";\n\nexport enum ProjectActionTypes {\n  ADD_COMMENT = \"ADD_COMMENT\",\n  LIKE_COMMENT = \"LIKE_COMMENT\",\n  LIKE_PROJECT = \"LIKE_PROJECT\",\n  UPDATE_STORY = \"UPDATE_STORY\",\n  ADD_TIMELINE = \"ADD_TIMELINE\",\n  LOAD_PROJECT = \"LOAD_PROJECT\",\n  CREATE_ORDER = \"CREATE_ORDER\",\n}\n\nexport type ProjectAction = {\n  type: ProjectActionTypes;\n  payload:\n    | CommentDTO\n    | LikeDTO\n    | string\n    | TimelineDTO\n    | any\n    | ProjectDTO\n    | OrderDTO;\n};\n\nexport const ProjectReducer = (state: ProjectDTO, action: ProjectAction) => {\n  switch (action.type) {\n    case ProjectActionTypes.ADD_TIMELINE: {\n      return {\n        ...state,\n        timelines: [...state.timelines, action.payload],\n      };\n    }\n    case ProjectActionTypes.UPDATE_STORY: {\n      return {\n        ...state,\n        story: action.payload,\n      };\n    }\n    case ProjectActionTypes.LOAD_PROJECT: {\n      return action.payload;\n    }\n    case ProjectActionTypes.ADD_COMMENT: {\n      return {\n        ...state,\n        commentCount: state.commentCount + 1,\n        comments: [...state.comments, action.payload],\n      };\n    }\n    case ProjectActionTypes.LIKE_COMMENT: {\n      const newLike: CommentDTO = action.payload;\n      //   Add like to comments\n      state.comments.forEach((comment) => {\n        if (comment.id === newLike.comment.id) {\n          if (!comment.likes) {\n            comment.likes = [];\n          }\n          comment.likes.push(newLike);\n        }\n      });\n      return {\n        ...state,\n        comments: [...state.comments],\n      };\n    }\n    case ProjectActionTypes.LIKE_PROJECT: {\n      return {\n        ...state,\n        likes: [...state?.likes, action.payload],\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { gql, useQuery } from \"@apollo/client\";\nimport {\n  FC,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { createContext, Dispatch } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ProjectDTO } from \"../DTO/ProjectDTO\";\nimport {\n  ProjectAction,\n  ProjectActionTypes,\n  ProjectReducer,\n} from \"../reducers/ProjectReducer\";\nexport interface ProjectDetailParams {\n  projectId: string;\n}\n\nexport interface IGetProjectData {\n  project: ProjectDTO;\n}\n\ninterface IProjectInput {\n  id?: string;\n}\n\nexport const GET_PROJECT = gql`\n  query GetProject($id: String!) {\n    project(id: $id) {\n      id\n      title\n      url\n      subTitle\n      story\n      category {\n        id\n        name\n      }\n      creator {\n        firstName\n        lastName\n        email\n      }\n      fundingGoal\n      currentFund\n      createdDate\n      deletedDate\n      likeCount\n      likes {\n        creator {\n          id\n        }\n      }\n      products {\n        url\n        title\n        price\n        id\n        description\n        orders {\n          id\n          quantity\n        }\n      }\n      timelines {\n        content\n        createdDate\n      }\n      commentCount\n      comments {\n        id\n        content\n        likeCount\n        createdDate\n        creator {\n          id\n          firstName\n          lastName\n          email\n        }\n        likes {\n          creator {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\ninterface IProjectContext {\n  state: ProjectDTO | null;\n  dispatch: Dispatch<ProjectAction>;\n}\n\nexport const ProjectContext = createContext<IProjectContext>({\n  state: null,\n  dispatch: () => {},\n});\n\nexport const ProjectProvider: FC = ({ children }) => {\n  let { projectId } = useParams<ProjectDetailParams>();\n  const [state, dispatch] = useReducer(ProjectReducer, null);\n\n  const { loading, data, refetch } = useQuery<IGetProjectData, IProjectInput>(\n    GET_PROJECT,\n    {\n      variables: { id: projectId },\n      onCompleted: (data) => {\n        dispatch({\n          payload: data.project,\n          type: ProjectActionTypes.LOAD_PROJECT,\n        });\n      },\n    }\n  );\n  useLayoutEffect(() => {\n    if (data) {\n      dispatch({\n        payload: data.project,\n        type: ProjectActionTypes.LOAD_PROJECT,\n      });\n    }\n  }, []);\n  return (\n    <ProjectContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ProjectContext.Provider>\n  );\n};\n\nexport default function useProject() {\n  return useContext(ProjectContext);\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FiCheckCircle } from \"react-icons/fi\";\nimport { useHistory } from \"react-router-dom\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport { OrderDTO } from \"../../DTO/OrderDTO\";\nimport { ProductDTO } from \"../../DTO/ProductDTO\";\nexport type IProduct = {\n  title: string;\n  price: number;\n  description: string;\n  child?: any;\n};\n\ninterface ProductCardProps {\n  product: ProductDTO;\n}\n\ninterface IOrderForm {\n  quantity: number;\n}\n\nconst CREATE_ORDER = gql`\n  mutation createOrder($productId: ID!, $quantity: Float!) {\n    createOrder(data: { productId: $productId, quantity: $quantity }) {\n      id\n      creator {\n        id\n      }\n      quantity\n      status\n      product {\n        id\n      }\n    }\n  }\n`;\nexport default function ProductCard({ product }: ProductCardProps) {\n  const history = useHistory();\n  const { state: auth, dispatch: dispatchAuth } = useAuth();\n  const [state, setState] = useState(product);\n  const { register, handleSubmit, errors } = useForm<IOrderForm>();\n  const [createOrder, { loading, data }] = useMutation(CREATE_ORDER, {\n    onCompleted: () => {\n      history.push(\"/orders\");\n    },\n  });\n  const onSubmit = (data) => {\n    createOrder({\n      variables: {\n        productId: product.id,\n        quantity: parseInt(data.quantity),\n      },\n    });\n  };\n  if (state)\n    return (\n      <div className=\"flex mb-4 flex-col rounded bg-white border-gray-400 shadow max-w-md\">\n        <div className=\"p-4 space-y-2\">\n          <p className=\"text-2xl capitalize\">{state.title}</p>\n          <img style={{ width: \"270px\" }} src={state.url} alt={state.title} />\n          <div className=\"py-4\">\n            <span className=\"text-4xl font-bold text-green-400\">\n              {state.price} €\n            </span>\n            <span>/unit</span>\n            <p className=\"text-gray-500 float-right\">\n              {state.orders?.length} orders\n            </p>\n          </div>\n          {auth?.token && (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                defaultValue={1}\n                max={99}\n                min={1}\n                ref={register({ required: true, min: 1, max: 99 })}\n              />\n              <button\n                type=\"submit\"\n                className=\"bg-red-400 mt-2 text-white uppercase py-2 px-6 hover:shadow-lg hover:bg-red-500 rounded text-sm font-medium focus:outline-none\"\n              >\n                Order\n              </button>\n            </form>\n          )}\n          {!auth?.token && <pre className=\"text-red-500\">Login to order</pre>}\n        </div>\n        <hr />\n        <div className=\"p-4 space-y-2\">\n          <p className=\"uppercase\">description</p>\n          <p className=\"text-gray-500 dark:text-gray-400 text-base\">\n            {state.description}\n          </p>\n        </div>\n      </div>\n    );\n}\n","import * as React from \"react\";\nimport Carousel from \"../common/Carousel\";\nimport { FiHeart, FiClock, FiThumbsUp, FiMessageCircle } from \"react-icons/fi\";\nimport { ProjectDTO } from \"../../DTO/ProjectDTO\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useProject, { ProjectDetailParams } from \"../../contexts/ProjectContext\";\nimport { ProjectActionTypes } from \"../../reducers/ProjectReducer\";\nimport DefaultAvatar from \"../common/Avatar\";\ninterface ProjectInfoProps {\n  project: ProjectDTO;\n}\n\nconst LIKE_PROJECT = gql`\n  mutation likeProject($projectId: ID!) {\n    likeProject(data: { projectId: $projectId }) {\n      likeCount\n      likes {\n        creator {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport default function ProjectInfo() {\n  let { projectId } = useParams<ProjectDetailParams>();\n  const { state: project, dispatch: dispatchProject } = useProject();\n  const { state: auth, dispatch } = useAuth();\n  let isLiked =\n    project?.likes?.map((like) => like?.creator?.id).indexOf(auth?.id) != -1 ||\n    false;\n  const [liked, setLiked] = useState(isLiked);\n  const [likeCount, setLikeCount] = useState(project.likeCount);\n  const [likeProject, { loading, data }] = useMutation(LIKE_PROJECT, {\n    variables: {\n      projectId,\n    },\n    onCompleted: ({ likeProject }) => {\n      setLiked(\n        likeProject.likes?.map((like) => like.creator.id).indexOf(auth?.id) !=\n          -1 || false\n      );\n      setLikeCount(likeProject.likeCount);\n    },\n  });\n  return (\n    <>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {/* <Carousel /> */}\n        <img\n          style={{ height: \"300px\" }}\n          src={project.url}\n          alt={project.title}\n        />\n        <div className=\"space-y-2 rounded bg-white border-gray-400 p-6\">\n          <div id=\"article\">\n            <div>\n              <div className=\"text-red-400\">{project.category.name}</div>\n              <span className=\"text-2xl font-semibold\">{project.title}</span>\n              {project.deletedDate != null && (\n                <span className=\"ml-2 text-2xl text-red-500 font-bold\">\n                  [CLOSED]\n                </span>\n              )}\n            </div>\n            <div className=\"font-normal text-md text-gray-700\" id=\"content\">\n              {project.subTitle}\n            </div>\n          </div>\n          <div className=\"flex flex-row py-2\">\n            <DefaultAvatar />\n            <div className=\"px-2\">\n              <p className=\"text-sm font-regular\">\n                {project.creator.firstName + \" \" + project.creator.lastName}\n              </p>\n              <p className=\"text-sm font-light mb-1\">{project.creator.email}</p>\n            </div>\n          </div>\n          <hr />\n          <div>\n            <div className=\"flex flex-row\">\n              <span className=\"text-md space-x-2 text-red-400 mr-2\">\n                <FiClock className=\"inline-flex mb-1\" />\n                <span>\n                  {new Date(project.createdDate).toLocaleDateString()}\n                </span>\n              </span>\n            </div>\n            <div className=\"overflow-hidden h-2 text-xs flex rounded bg-green-200 my-2\">\n              <div\n                style={{\n                  width: `${\n                    (project.currentFund * 100) / project.fundingGoal\n                  }%`,\n                }}\n                className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-500\"\n              ></div>\n            </div>\n            <div className=\"space-y-1\">\n              <p className=\"text-4xl text-green-700\">{project.currentFund} €</p>\n              <p className=\"text-gray-500\">\n                pledged of €{project.fundingGoal} goal\n              </p>\n            </div>\n          </div>\n          <div className=\"space-x-4 py-4\">\n            <span aria-disabled={project.deletedDate != null}>\n              <FiThumbsUp\n                onClick={() => likeProject()}\n                className={`text-gray-500 cursor-pointer mb-1 mr-1 inline-flex hover:text-red-500 ${\n                  liked ? \"text-red-500\" : \"\"\n                }`}\n              />\n              <span>{likeCount} likes</span>\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport { useEffect, useState } from \"react\";\nimport { FiHeart, FiThumbsUp } from \"react-icons/fi\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport { CommentDTO } from \"../../DTO/CommentDTO\";\nimport DefaultAvatar from \"../common/Avatar\";\n\ninterface CommentCardProps {\n  comment: CommentDTO;\n}\nconst LIKE_COMMENT = gql`\n  mutation likeComment($commentId: ID!) {\n    likeComment(data: { commentId: $commentId }) {\n      likes {\n        creator {\n          id\n        }\n      }\n      id\n      content\n      likeCount\n      createdDate\n      creator {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\nexport default function CommentCard({ comment }: CommentCardProps) {\n  const [state, setState] = useState(comment);\n  const { state: auth, dispatch } = useAuth();\n  let isLiked =\n    state.likes?.map((like) => like.creator.id).indexOf(auth?.id) != -1 ||\n    false;\n  const [liked, setLiked] = useState(isLiked);\n\n  useEffect(() => {\n    setLiked(isLiked);\n  }, [state]);\n\n  const [sendLike, { loading, data }] = useMutation(LIKE_COMMENT, {\n    variables: {\n      commentId: state.id,\n    },\n    onCompleted: (data) => {\n      setState({ ...data.likeComment });\n    },\n  });\n\n  return (\n    <>\n      <div className=\"flex items-center justify-center\">\n        <div className=\"bg-white dark:bg-gray-800 dark:border-gray-800 p-4 rounded-lg border w-full\">\n          <div className=\"flex justify-between\">\n            <div className=\"flex items-center\">\n              <DefaultAvatar />\n              <div className=\"ml-1.5 text-sm leading-tight\">\n                <span className=\"text-black dark:text-white font-bold block \">\n                  {state.creator.firstName + \" \" + state.creator.lastName}\n                </span>\n                <span className=\"text-gray-500 dark:text-gray-400 font-normal block\">\n                  @{state.creator.email}\n                </span>\n              </div>\n            </div>\n          </div>\n          <p className=\"text-black dark:text-white block text-xl leading-snug mt-3\">\n            {state.content}\n          </p>\n          <p className=\"text-gray-500 dark:text-gray-400 text-base py-1 my-0.5\">\n            {new Date(state.createdDate).toDateString()}\n          </p>\n          <div className=\"border-gray-200 dark:border-gray-600 border border-b-0 my-1\"></div>\n          <div className=\"text-gray-500 dark:text-gray-400 flex mt-3\">\n            <div className=\"flex items-center mr-6\">\n              <FiThumbsUp\n                onClick={() => sendLike()}\n                className={`text-gray-500 inline-flex cursor-pointer hover:text-red-500 ${\n                  liked ? \"text-red-500\" : \"\"\n                }`}\n              />\n              <span className=\"ml-3\">{state.likeCount} likes</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport React, { Dispatch, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport useProject, { ProjectDetailParams } from \"../../contexts/ProjectContext\";\nimport { CommentDTO } from \"../../DTO/CommentDTO\";\nimport { ProjectActionTypes } from \"../../reducers/ProjectReducer\";\nimport DefaultAvatar from \"../common/Avatar\";\n\nconst CREATE_COMMENT = gql`\n  mutation CreateComment($projectId: ID!, $content: String!) {\n    createComment(data: { projectId: $projectId, content: $content }) {\n      id\n      content\n      likeCount\n      createdDate\n      creator {\n        id\n        firstName\n        lastName\n        email\n      }\n      likes {\n        creator {\n          id\n        }\n      }\n    }\n  }\n`;\n\ninterface CommentFormProps {\n  addComment: (comment: any) => void;\n}\n\nexport default function CommentForm() {\n  let { projectId } = useParams<ProjectDetailParams>();\n  const { state: project, dispatch: dispatchProject } = useProject();\n  const { state: auth, dispatch: dispatchAuth } = useAuth();\n  const { register, errors, handleSubmit, reset } = useForm();\n  const [sendComment, { loading, error, data }] = useMutation(CREATE_COMMENT, {\n    onCompleted: (data) => {\n      dispatchProject({\n        type: ProjectActionTypes.ADD_COMMENT,\n        payload: data.createComment,\n      });\n      reset({\n        content: \"\",\n      });\n    },\n  });\n  const onSubmit = (data) => {\n    console.log(data);\n    sendComment({\n      variables: {\n        content: data.content,\n        projectId,\n      },\n    });\n    data = {};\n  };\n  return (\n    <div className=\"flex items-center justify-center\">\n      <div className=\"bg-white dark:bg-gray-800 glass dark:border-gray-800 p-4 rounded-xl border w-full\">\n        <div className=\"flex justify-between\">\n          <div className=\"flex items-center\">\n            <DefaultAvatar />\n            <div className=\"ml-1.5 text-sm leading-tight\">\n              <span className=\"text-black dark:text-white font-bold block \">\n                {auth.email}\n              </span>\n            </div>\n          </div>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"w-full\">\n          <input\n            ref={register({ required: true })}\n            className=\"bg-gray-100 my-2 rounded border border-gray-400 leading-normal resize-none w-full h-20 py-2 px-3 placeholder-gray-500 focus:outline-none focus:bg-white\"\n            name=\"content\"\n            placeholder=\"Type Your Comment\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 text-white uppercase py-2 px-6 shadow-lg rounded text-sm font-medium\"\n          >\n            comment\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { FiMessageCircle } from \"react-icons/fi\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport useProject from \"../../contexts/ProjectContext\";\nimport { CommentDTO } from \"../../DTO/CommentDTO\";\nimport CommentCard from \"./CommentCard\";\nimport CommentForm from \"./CommentForm\";\n\ninterface CommentsProps {\n  comments: CommentDTO[];\n}\n\nfunction sortByCreatedDate(a: CommentDTO, b: CommentDTO) {\n  if (a.createdDate < b.createdDate) {\n    return 1;\n  }\n  if (a.createdDate > b.createdDate) {\n    return -1;\n  }\n  return 0;\n}\n\nexport default function Comments() {\n  const { state: auth, dispatch } = useAuth();\n  const {\n    state: { comments, deletedDate },\n    dispatch: dispatchProject,\n  } = useProject();\n  const [state, setState] = useState(comments.sort(sortByCreatedDate));\n  useEffect(() => {\n    setState(comments.sort(sortByCreatedDate));\n  }, [comments]);\n  if (!auth?.token) {\n    return <pre className=\"text-red-500\">Login to comment</pre>;\n  }\n  return (\n    <>\n      <div className=\"space-y-6\">\n        <div>\n          <FiMessageCircle className=\"text-blue-500 inline-block mr-2 mb-1\" />\n          <span>{state.length} comments</span>\n        </div>\n        {auth.token && deletedDate == null && <CommentForm />}\n        {deletedDate != null && (\n          <pre className=\"text-red-500\">Comment feature is closed</pre>\n        )}\n        {state.map((comment, index) => (\n          <CommentCard comment={comment} key={comment.id} />\n        ))}\n      </div>\n    </>\n  );\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport useProject from \"../../contexts/ProjectContext\";\nimport { TimelineDTO } from \"../../DTO/TimelineDTO\";\nimport { ProjectActionTypes } from \"../../reducers/ProjectReducer\";\n\ninterface TimelineProps {\n  timelines: TimelineDTO[];\n}\nconst ADD_TIMELINE = gql`\n  mutation createTimeline($projectId: String!, $content: String!) {\n    createTimeline(data: { projectId: $projectId, content: $content }) {\n      content\n      createdDate\n    }\n  }\n`;\nexport default function Timeline() {\n  const { register, errors, handleSubmit, reset } = useForm();\n  const { state: project, dispatch: dispatchProject } = useProject();\n  const { state: auth, dispatch: dispatchAuth } = useAuth();\n  const [addTimeline, { loading, data }] = useMutation(ADD_TIMELINE, {\n    onCompleted: ({ createTimeline }) => {\n      dispatchProject({\n        type: ProjectActionTypes.ADD_TIMELINE,\n        payload: createTimeline,\n      });\n      reset({\n        content: \"\",\n      });\n    },\n  });\n  const onSubmit = (data) => {\n    addTimeline({\n      variables: {\n        projectId: project.id,\n        content: data.content,\n      },\n    });\n  };\n  return (\n    <>\n      {auth.email === project.creator.email && project.deletedDate == null && (\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            ref={register({ required: true })}\n            className=\"bg-gray-100 my-2 rounded border border-gray-400 leading-normal resize-none w-full h-20 py-2 px-3 placeholder-gray-500 focus:outline-none focus:bg-white\"\n            name=\"content\"\n            placeholder=\"Type Your Comment\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 text-white uppercase py-2 px-6 shadow-lg rounded text-sm font-medium\"\n          >\n            add timeline\n          </button>\n        </form>\n      )}\n      <div className=\"flex justify-start\">\n        <ol className=\"p-4\">\n          {project.timelines.map((timeline, i) => (\n            <li\n              className=\"feed-item relative pb-5 pl-6 border-l-2 border-red-300 last:border-transparent\"\n              key={`timeline${i}`}\n            >\n              <time\n                className=\"block text-gray-500 relative uppercase text-sm -top-1\"\n                dateTime=\"9-25\"\n              >\n                {new Date(timeline.createdDate).toLocaleDateString()}\n              </time>\n              <span className=\"text\">{timeline.content}</span>\n            </li>\n          ))}\n        </ol>\n      </div>\n    </>\n  );\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport React, { useState } from \"react\";\nimport useAuth from \"../../contexts/AuthContext\";\nimport useProject from \"../../contexts/ProjectContext\";\nimport { CommentDTO } from \"../../DTO/CommentDTO\";\nimport { TimelineDTO } from \"../../DTO/TimelineDTO\";\nimport { ProjectActionTypes } from \"../../reducers/ProjectReducer\";\nimport Comments from \"../Comment/Comments\";\nimport QuillEditor from \"../common/QuillEditor\";\nimport Timeline from \"./ProjectTimeline\";\n\ninterface ProjectTabsProps {\n  story: string;\n  timelines: TimelineDTO[];\n  comments: CommentDTO[];\n}\n\nconst UPDATE_PROJECT = gql`\n  mutation updateProject($id: ID!, $story: String!) {\n    updateProject(data: { id: $id, story: $story }) {\n      story\n    }\n  }\n`;\nexport default function ProjectTabs() {\n  const { state: auth, dispatch: dispatchAuth } = useAuth();\n  const {\n    state: { id, story, timelines, comments, creator, deletedDate },\n    dispatch: dispatchProject,\n  } = useProject();\n  const [updateProject, { loading, data }] = useMutation(UPDATE_PROJECT, {\n    onCompleted: ({ updateProject }) => {\n      dispatchProject({\n        type: ProjectActionTypes.UPDATE_STORY,\n        payload: updateProject.story,\n      });\n    },\n  });\n  const [openTab, setOpenTab] = useState(0);\n  const tabList = [\"Story\", \"Timeline\", \"Comments\"];\n  const color = \"red\";\n  return (\n    <>\n      <div className=\"flex flex-wrap\">\n        <div className=\"w-full\">\n          <ul\n            className=\"flex mb-0 list-none flex-wrap pb-4 justify-between space-x-2\"\n            role=\"tablist\"\n          >\n            {tabList.map((tab, index) => (\n              <li key={tab} className=\"-mb-px last:mr-0 flex-auto text-center\">\n                <a\n                  className={\n                    \"text-xs font-bold uppercase px-5 py-3 border border-red-400 rounded block leading-normal \" +\n                    (openTab === index\n                      ? \"text-white bg-\" + color + \"-400\"\n                      : \"text-\" + color + \"-400 bg-white\")\n                  }\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setOpenTab(index);\n                  }}\n                  data-toggle=\"tab\"\n                  href=\"#link1\"\n                  role=\"tablist\"\n                >\n                  {tab}\n                </a>\n              </li>\n            ))}\n          </ul>\n          <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 rounded shadow\">\n            <div className=\"px-4 py-5 flex-auto\">\n              <div className=\"tab-content tab-space \">\n                <div className={openTab === 0 ? \"block\" : \"hidden\"} id=\"link1\">\n                  <div dangerouslySetInnerHTML={{ __html: story }}></div>\n                </div>\n                <div className={openTab === 1 ? \"block\" : \"hidden\"} id=\"link1\">\n                  <Timeline />\n                </div>\n                <div className={openTab === 2 ? \"block\" : \"hidden\"} id=\"link1\">\n                  <Comments />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport * as React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useProject from \"../../contexts/ProjectContext\";\nimport { ProjectDTO } from \"../../DTO/ProjectDTO\";\nimport ProductCard from \"../Product/ProductCard\";\nimport ProjectInfo from \"./ProjectInfo\";\nimport ProjectTabs from \"./ProjectTabs\";\n\nexport default function ProjectDetail() {\n  const { state: project, dispatch } = useProject();\n  React.useEffect(() => {\n    console.log(project);\n  }, [project]);\n  if (project) {\n    return (\n      <div>\n        <ProjectInfo />\n        <hr className=\"my-2\" />\n        <div className=\"grid grid-cols-4 gap-6\">\n          <div className=\"col-span-3\">\n            <ProjectTabs />\n          </div>\n          <div>\n            {project.products.map((product) => (\n              <ProductCard key={product.id} product={product} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return <p>Loading</p>;\n}\n","import { gql, useMutation } from \"@apollo/client\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport useCategory from \"../../contexts/CategoryContext\";\nimport useProject from \"../../contexts/ProjectContext\";\nimport { CategoryDTO } from \"../../DTO/CategoryDTO\";\nimport { CreateProductInput, ProductDTO } from \"../../DTO/ProductDTO\";\nimport Dropdown from \"../common/Dropdown\";\nimport QuillEditor from \"../common/QuillEditor\";\nimport ProductCard from \"../Product/ProductCard\";\n\nconst UPDATE_PROJECT = gql`\n  mutation updateProject($data: CreateProjectInput!, $id: String!) {\n    updateProject(data: $data, id: $id)\n  }\n`;\n\nexport default function EditProjectForm() {\n  const history = useHistory();\n  const { state: project, dispatch: dispatchProject } = useProject();\n  const [story, setStory] = useState(\"\");\n  const { categories } = useCategory();\n  const [selectedCategory, setCategory] = useState<CategoryDTO>();\n  const { register, errors, handleSubmit, watch, setValue } = useForm();\n  const [updateProject, { loading, error, data }] = useMutation(\n    UPDATE_PROJECT,\n    {\n      onCompleted: ({ updateProject }) => {\n        history.push(`/projects/detail/${updateProject}`);\n      },\n    }\n  );\n\n  const onUpdateSubmit = ({\n    title,\n    subTitle,\n    url,\n    startDate,\n    duration,\n    product,\n    fundingGoal,\n  }) => {\n    product.price = parseInt(product.price);\n    fundingGoal = parseInt(fundingGoal);\n    const body = {\n      title,\n      subTitle,\n      url,\n      products: [product],\n      fundingGoal,\n      story: story,\n      categoryId: selectedCategory.id,\n    };\n    updateProject({\n      variables: {\n        data: body,\n        id: project.id,\n      },\n    });\n  };\n\n  const projectImage = watch(\"url\");\n  const productImage = watch(\"product.url\");\n\n  useEffect(() => {\n    console.log(\"project\", project);\n    if (project?.story) setStory(project?.story);\n    if (project?.category) setCategory(project?.category);\n    if (project) {\n      setValue(\"title\", project.title);\n      setValue(\"subTitle\", project.subTitle);\n      setValue(\"url\", project.url);\n      setValue(\"product\", project.products?.[0]);\n      setValue(\"fundingGoal\", project.fundingGoal);\n    }\n  }, [project]);\n  if (project !== null)\n    return (\n      <>\n        <div className=\"max-w-screen-sm mx-auto mb-10\">\n          <form onSubmit={handleSubmit(onUpdateSubmit)}>\n            <div className=\"shadow sm:rounded-md\">\n              <div className=\"px-4 rounded-t-md py-5 bg-white space-y-6 sm:p-6\">\n                <p className=\"text-2xl text-red-400 pb-2 border-b-2 border-red-400\">\n                  Edit project\n                </p>\n                <div className=\"grid grid-cols-1 gap-6\">\n                  <div>\n                    <label\n                      htmlFor=\"title\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Title\n                      <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"title\"\n                      ref={register({ required: true })}\n                      placeholder=\"Title\"\n                      defaultValue={project.title}\n                      className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">\n                      Subtitle\n                    </label>\n                    <div className=\"form-input mt-1\">\n                      <input\n                        name=\"subTitle\"\n                        ref={register({ required: true })}\n                        type=\"text\"\n                        placeholder=\"Subtitle\"\n                        className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                      />\n                    </div>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category\n                    </label>\n                    <Dropdown\n                      items={categories}\n                      defaultValue={project.category}\n                      setValue={setCategory}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Cover photo\n                  </label>\n                  <img className=\"max-h-20\" src={projectImage} alt=\"\" />\n                  <div className=\"form-input mt-1\">\n                    <input\n                      name=\"url\"\n                      ref={register({ required: true })}\n                      type=\"text\"\n                      placeholder=\"Cover photo URL\"\n                      className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Funding goal (eur)\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      name=\"fundingGoal\"\n                      ref={register({ required: true })}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      step={100}\n                      className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <p className=\"text-2xl text-red-400 mb-2 pb-2 border-b-2 border-red-400\">\n                    Story\n                  </p>\n                  <QuillEditor story={story} setStory={setStory} />\n                </div>\n                <p className=\"text-2xl text-red-400 pb-2 border-b-2 border-red-400\">\n                  Product\n                </p>\n                <div key=\"productForm\" className=\"grid grid-cols-1 gap-6\">\n                  <div>\n                    <label\n                      htmlFor=\"title\"\n                      className=\"block text-sm font-medium text-gray-700\"\n                    >\n                      Title\n                      <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                      name=\"product.title\"\n                      type=\"text\"\n                      ref={register({ required: true })}\n                      placeholder=\"Product title\"\n                      className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">\n                      Price (eur)\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        type=\"number\"\n                        placeholder=\"price\"\n                        name=\"product.price\"\n                        ref={register({ required: true })}\n                        className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                        step={10}\n                        min={0}\n                      />\n                    </div>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">\n                      Description\n                    </label>\n                    <textarea\n                      rows={4}\n                      name=\"product.description\"\n                      ref={register({ required: true })}\n                      className=\"resize-none form-input mt-1 block w-full rounded border-gray-300\"\n                      placeholder=\"Product description\"\n                    ></textarea>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">\n                      Product photo\n                    </label>\n                    <img className=\"max-h-20\" src={productImage} alt=\"\" />\n                    <input\n                      type=\"text\"\n                      name=\"product.url\"\n                      ref={register({ required: true })}\n                      placeholder=\"Product photo URL\"\n                      className=\"form-input mt-1 block w-full rounded border-gray-300\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"px-4 rounded-b-md py-3 bg-gray-50 text-right sm:px-6\">\n                <button\n                  className=\"focus:outline-none bg-blue-500 text-white uppercase py-2 px-6 shadow-lg rounded text-sm font-medium\"\n                  type=\"submit\"\n                >\n                  Save & Lauch\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </>\n    );\n\n  return <pre>Loading</pre>;\n}\n","import { gql, useMutation, useQuery } from \"@apollo/client\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useAuth from \"../contexts/AuthContext\";\nimport { OrderDTO } from \"../DTO/OrderDTO\";\n\nconst GET_MY_ORDERS = gql`\n  query myOrders {\n    myOrders {\n      id\n      product {\n        title\n        project {\n          title\n          id\n        }\n      }\n      quantity\n      status\n      createdDate\n    }\n  }\n`;\n\nconst REMOVE_ORDER = gql`\n  mutation removeOrder($id: String!) {\n    removeOrder(id: $id)\n  }\n`;\n\ninterface RenderOrderItemProps {\n  order: OrderDTO;\n  onRemove: () => void;\n}\n\nconst RenderProjectItem = ({ order, onRemove }: RenderOrderItemProps) => {\n  return (\n    <tr key={order.id}>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        {order.product.project.deletedDate == null && (\n          <Link\n            className=\"text-sm font-medium text-blue-500 hover:underline\"\n            to={`/projects/detail/${order.product.project.id}`}\n          >\n            {order.product.project.title}\n          </Link>\n        )}\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <p className=\"text-sm text-gray-900\">{order.product.title}</p>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <span className=\"uppercase px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n          {order.quantity}\n        </span>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        {new Date(order.createdDate).toLocaleDateString()}\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n        {order.status}\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n        <button onClick={onRemove} className=\"text-red-500 p-2\">\n          Remove\n        </button>\n      </td>\n    </tr>\n  );\n};\n\ninterface IMyOrders {\n  myOrders: OrderDTO[];\n}\nexport default function MyOrders() {\n  const { state, dispatch } = useAuth();\n  const [myOrders, setMyOrders] = useState<OrderDTO[]>(null);\n  const { loading, data } = useQuery<IMyOrders>(GET_MY_ORDERS);\n  const [removeOrder, { data: removedId, error: removeError }] = useMutation(\n    REMOVE_ORDER,\n    {\n      onCompleted: ({ removeOrder }) => {\n        console.log(removeOrder);\n        const updatedMyProjects = myOrders.filter((p) => p.id !== removeOrder);\n        setMyOrders([...updatedMyProjects]);\n      },\n    }\n  );\n  useEffect(() => {\n    if (data && data.myOrders) {\n      setMyOrders([...data.myOrders]);\n    }\n  }, [data]);\n  if (loading) <pre className=\"text-red-500\">Loading</pre>;\n  if (myOrders)\n    return (\n      <>\n        <div className=\"py-4 flex flex-row justify-between\">\n          <p className=\"text-3xl uppercase\">My orders</p>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"overflow-hidden border border-gray-200 sm:rounded-lg shadow-sm\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Project\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Product\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Quantity\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Created date\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                      >\n                        Status\n                      </th>\n                      <th scope=\"col\" className=\"relative px-6 py-3\">\n                        <span className=\"sr-only\">...</span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {myOrders.map((order) => (\n                      <RenderProjectItem\n                        key={order.id}\n                        order={order}\n                        onRemove={() => {\n                          removeOrder({\n                            variables: {\n                              id: order.id,\n                            },\n                          });\n                        }}\n                      />\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n\n  return null;\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./HomePage\";\nimport Nav from \"./Nav\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { ProjectDTO } from \"../DTO/ProjectDTO\";\nimport Login from \"./Login\";\nimport ProjectList from \"./Project/ProjectList\";\nimport Register from \"./Register\";\nimport Profile from \"./Profile\";\nimport CreateProjectForm from \"./Project/CreateProjectForm\";\nimport ProjectDetail from \"./Project/ProjectDetail\";\nimport { ProjectProvider } from \"../contexts/ProjectContext\";\nimport EditProjectForm from \"./Project/EditProjectForm\";\nimport MyOrders from \"./MyOrders\";\n\nexport default function App() {\n  return (\n    <>\n      <Router>\n        <Nav />\n        <div className=\"container max-w-screen-xl mx-auto\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/projects\">\n              <ProjectList />\n            </Route>\n            <ProtectedRoute isPrivate={false} path=\"/login\">\n              <Login />\n            </ProtectedRoute>\n            <ProtectedRoute isPrivate={false} path=\"/register\">\n              <Register />\n            </ProtectedRoute>\n            <ProtectedRoute isPrivate={true} path=\"/profile\">\n              <Profile />\n            </ProtectedRoute>\n            <ProtectedRoute isPrivate={true} path=\"/projects/create\">\n              <CreateProjectForm />\n            </ProtectedRoute>\n            <Route path=\"/projects/detail/:projectId\">\n              <ProjectProvider>\n                <ProjectDetail />\n              </ProjectProvider>\n            </Route>\n            <ProtectedRoute isPrivate={true} path=\"/projects/edit/:projectId\">\n              <ProjectProvider>\n                <EditProjectForm />\n              </ProjectProvider>\n            </ProtectedRoute>\n            <Route path=\"/orders\">\n              <MyOrders />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\n\ninterface PropsInterface {}\n\ninterface StateInterface {\n  hasError: Boolean;\n  error?: Error | null;\n  info?: object;\n}\n\nclass ErrorBoundary extends Component<PropsInterface, StateInterface> {\n  state = { hasError: false };\n\n  componentDidCatch(error: Error | null, info: object) {\n    this.setState({ hasError: true, error, info });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <pre className=\"text-red-500 text-4xl\">Something went wrong.</pre>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/tailwind.css\";\n\nimport App from \"./components/App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  DefaultOptions,\n  gql,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { CategoryProvider } from \"./contexts/CategoryContext\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { AuthDTO } from \"./DTO/AuthDTO\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nconst defaultOptions: DefaultOptions = {\n  watchQuery: {\n    fetchPolicy: \"no-cache\",\n    errorPolicy: \"ignore\",\n  },\n  query: {\n    fetchPolicy: \"no-cache\",\n    errorPolicy: \"all\",\n  },\n  mutate: {\n    fetchPolicy: \"no-cache\",\n    errorPolicy: \"all\",\n  },\n};\nconst typeDefs = gql`\n  extend type CreateUserInput {\n    firstName: String\n    lastName: String\n    address: String\n    postcode: String\n    phone: String\n    email: String\n    password: String\n  }\n\n  extend type CreateProjectInput {\n    title: String\n    subTitle: String\n    url: String\n    categoryId: String\n    story: String\n    # startDate?: Date\n    # duration?: Number\n    products: [CreateProductInput]\n    fundingGoal: Number\n  }\n\n  extend type UpdateProjectInput {\n    id: ID\n    title: String\n    subTitle: String\n    url: String\n    categoryId: ID\n    story: String\n    # startDate?: Date\n    # duration?: Number\n    products: [UpdateProductInput]\n    fundingGoal: Number\n  }\n\n  extend type CreateProductInput {\n    title: String\n    description: String\n    price: Number\n    url: String\n  }\n\n  extend type UpdateProductInput {\n    id: ID\n    title: String\n    description: String\n    price: Number\n    url: String\n  }\n\n  extend type CreateOrderInput {\n    productId: ID\n    quantity: Number\n  }\n\n  extend type Category {\n    id: String\n    name: String\n  }\n`;\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const auth: AuthDTO = JSON.parse(localStorage.getItem(\"auth\"));\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: auth?.token ? `Bearer ${auth.token}` : \"\",\n    },\n  };\n});\nconst httpLink = createHttpLink({\n  uri: \"http://18.184.123.88:4000/graphql\",\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  defaultOptions: defaultOptions,\n  typeDefs,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <ApolloProvider client={client}>\n        <AuthProvider>\n          <CategoryProvider>\n            <App />\n          </CategoryProvider>\n        </AuthProvider>\n      </ApolloProvider>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}